#!/bin/bash

# Parsing ENV to setup display options
# LOG_INFO
[[ $LOG_INFO == 'True' ]] && LOG='level=INFO | ' || LOG=''
# LOG_DATE
[[ $LOG_DATE == 'True' ]] && NOW=$(date +'[%Y-%m-%d %H:%M:%S] ') || NOW=''

echo "$NOW$LOG|------------------------------------|"
echo "$NOW$LOG|        Remote Usage Status         |"
echo "$NOW$LOG|------------------------------------|"
echo "$NOW$LOG|  Period | Engine  |    Size | ZIPs |"
echo "$NOW$LOG|---------|---------|---------|------|"

# Variables Initialization
SIZETT=0
FILETT=0

for PERIOD in hourly daily weekly monthly;do
  # Variables Initialization
  SIZET=0
  FILET=0

    for ENGINE in SQLite MySQL Redis MongoDB;do
        if [[ $RCLONE_REMOTE_TYPE == 'swift' ]]; then
            SIZEB=$(rclone --quiet size pcs:"$RCLONE_REMOTE_PATH"/"$ENGINE"/"$PERIOD" | grep size | awk '{print $5}' | sed -e 's/(//')
            FILES=$(rclone --quiet size pcs:"$RCLONE_REMOTE_PATH"/"$ENGINE"/"$PERIOD" | grep objects | awk '{print $3}')
        elif [[ $RCLONE_REMOTE_TYPE == 'rsync' ]]; then
            SIZEB=$(echo "ls -l" | sshpass -p "$PCA_PASS" sftp "$PCA_USER"@"$PCA_HOST":"$PCA_DIR"/"$ENGINE"/"$PERIOD" 2>1 | grep .zip | awk '{print $5}' | awk '{s+=$1} END {printf "%.0f\n", s}')
            FILES=$(echo "ls -l" | sshpass -p "$PCA_PASS" sftp "$PCA_USER"@"$PCA_HOST":"$PCA_DIR"/"$ENGINE"/"$PERIOD" 2>1 | grep -c .zip)
        elif [[ $RCLONE_REMOTE_TYPE == 's3' ]]; then
            SIZEB=$(rclone --quiet size s3backup:"$RCLONE_REMOTE_PATH"/"$ENGINE"/"$PERIOD" | grep size | awk '{print $5}' | sed -e 's/(//')
            FILES=$(rclone --quiet size s3backup:"$RCLONE_REMOTE_PATH"/"$ENGINE"/"$PERIOD" | grep objects | awk '{print $3}')
        fi
        if [[ $FILES > 0 ]]; then
          SIZEM=$(($SIZEB/1024/1024))
          SIZET=$(($SIZET + $SIZEM))
          FILET=$(($FILET + $FILES))
          SIZETT=$(($SIZETT + $SIZEM))
          FILETT=$(($FILETT + $FILES))

          printf "$NOW$LOG| %7s | %-7s | %4s MB | %4s |\n" $PERIOD $ENGINE $SIZEM $FILES
        fi
    done;

    if [[ $FILET > 0 ]]; then
        printf "$NOW$LOG|         |  TOTAL  | %4s MB | %4s |\n" $SIZET $FILET
    fi
done;
echo "$NOW$LOG|---------|---------|---------|------|"
printf "$NOW$LOG|                   | %4s MB | %4s |\n" $SIZETT $FILETT
echo "$NOW$LOG|------------------------------------|"
