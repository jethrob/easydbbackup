#!/bin/bash

HOUR=$(date +%H)
PERIOD='hourly'
OK="\t[\e[92m✓\e[0m]"
KO="\t[\e[91m✗\e[0m]"

if [[ $SQLITE_DUMP == 'True' ]]
then
    NOW=$(date +'%Y-%m-%d %H:%M:%S')
    SQLITE_DB_FILE="/tmp/$HOUR-dump-$SQLITE_DB.SQL"
    SQLITE_ZIP_FILE="/tmp/$HOUR-dump-$SQLITE_DB.SQL.zip"

    if [[ -e "$SQLITE_PATH/$SQLITE_DB" ]]
    then
        echo    "$NOW [$PERIOD] $SQLITE_PATH/$SQLITE_DB"
        echo -n "$NOW [$PERIOD]  └> Dumping"
        cp -a "$SQLITE_PATH/$SQLITE_DB" /tmp/
        sqlite3 "/tmp/$SQLITE_DB" .dump > $SQLITE_DB_FILE
        if [[ -e "$SQLITE_DB_FILE" ]]
        then
            echo -e $OK
            echo -n "$NOW [$PERIOD]  └> Zipping"
            zip -qq $SQLITE_ZIP_FILE $SQLITE_DB_FILE
            if [[ -e "$SQLITE_ZIP_FILE" ]]
            then
                echo -e $OK

                if [[ $RCLONE_CONFIG_PCS_TYPE == 'swift' ]]
                then
                    echo -n "$NOW [$PERIOD]  └> Rcloning"
                    rclone --quiet sync $SQLITE_ZIP_FILE pcs:"$RCLONE_CONFIG_PCS_DIR"/"$PERIOD"/
                    if [[ $? -eq 0 ]]; then echo -e $OK; else echo -e $KO; fi
                else
                    echo -n "$NOW [$PERIOD]  └> Rsyncing"
                    sshpass -p "$PCA_PASS" rsync -e "ssh -o StrictHostKeyChecking=no" -a $SQLITE_ZIP_FILE "$PCA_USER"@"$PCA_HOST":"$PCA_DIR"/"$PERIOD"/
                    if [[ $? -eq 0 ]]; then echo -e $OK; else echo -e $KO; fi
                fi

                echo -n "$NOW [$PERIOD]  └> Cleaning"
                rm $SQLITE_ZIP_FILE "/tmp/$SQLITE_DB"
                if [ ! -f $SQLITE_ZIP_FILE ]; then echo -e $OK; else echo -e $KO; fi
            else
                echo -e $KO
            fi
            rm $SQLITE_DB_FILE
        else
            echo -e $KO
        fi
    fi
fi

if [[ $REDIS_DUMP == 'True' ]]
then
    NOW=$(date +'%Y-%m-%d %H:%M:%S')
    REDIS_ZIP_FILE="/tmp/$HOUR-dump-redis.RDB.zip"
    REDIS_DB_FILE="/tmp/dump-redis.RDB"

    echo    "$NOW [$PERIOD] $REDIS_DB_HOST"
    echo -n "$NOW [$PERIOD]  └> Dumping"
    redis-cli -u "redis://$REDIS_DB_HOST:$REDIS_DB_PORT" --rdb $REDIS_DB_FILE &>/dev/null
    if [[ -e "$REDIS_DB_FILE" ]]
    then
        echo -e $OK
        echo -n "$NOW [$PERIOD]  └> Zipping"
        zip -qq $REDIS_ZIP_FILE $REDIS_DB_FILE
        if [[ -e "$REDIS_ZIP_FILE" ]]
        then
            echo -e $OK

            if [[ $RCLONE_CONFIG_PCS_TYPE == 'swift' ]]
            then
                echo -n "$NOW [$PERIOD]  └> Rcloning"
                rclone --quiet sync $REDIS_ZIP_FILE pcs:"$RCLONE_CONFIG_PCS_DIR"/"$PERIOD"/
                if [[ $? -eq 0 ]]; then echo -e $OK; else echo -e $KO; fi
            else
                echo -n "$NOW [$PERIOD]  └> Rsyncing"
                sshpass -p "$PCA_PASS" rsync -e "ssh -o StrictHostKeyChecking=no" -a $REDIS_ZIP_FILE "$PCA_USER"@"$PCA_HOST":"$PCA_DIR"/"$PERIOD"/
                if [[ $? -eq 0 ]]; then echo -e $OK; else echo -e $KO; fi
            fi

            echo -n "$NOW [$PERIOD]  └> Cleaning"
            rm $REDIS_ZIP_FILE
            if [ ! -f $REDIS_ZIP_FILE ]; then echo -e $OK; else echo -e $KO; fi
        else
            echo -e $KO
        fi
        rm $REDIS_DB_FILE
    else
        echo -e $KO
    fi
fi

if [[ $MYSQL_DUMP == 'True' ]]
then
    for MYSQL_DB in `echo $MYSQL_DB_LIST | tr "," "\n"`;do
        NOW=$(date +'%Y-%m-%d %H:%M:%S')
        MYSQL_ZIP_FILE="/tmp/$HOUR-dump-$MYSQL_DB.SQL.zip"
        MYSQL_DB_FILE="/tmp/dump-$MYSQL_DB.SQL"

        echo    "$NOW [$PERIOD] $MYSQL_DB_HOST/$MYSQL_DB"
        echo -n "$NOW [$PERIOD]  └> Dumping"
        mysqldump --opt --lock-tables --user=$MYSQL_DB_USER --password=$MYSQL_DB_PASS --host=$MYSQL_DB_HOST $MYSQL_DB > $MYSQL_DB_FILE
        if [[ -e "$MYSQL_DB_FILE" ]]
        then
            echo -e $OK
            echo -n "$NOW [$PERIOD]  └> Zipping"
            zip -qq $MYSQL_ZIP_FILE $MYSQL_DB_FILE
            if [[ -e "$MYSQL_ZIP_FILE" ]]
            then
                echo -e $OK

                if [[ $RCLONE_CONFIG_PCS_TYPE == 'swift' ]]
                then
                    echo -n "$NOW [$PERIOD]  └> Rcloning"
                    rclone --quiet sync $MYSQL_ZIP_FILE pcs:"$RCLONE_CONFIG_PCS_DIR"/"$PERIOD"/
                    if [[ $? -eq 0 ]]; then echo -e $OK; else echo -e $KO; fi
                else
                    echo -n "$NOW [$PERIOD]  └> Rsyncing"
                    sshpass -p "$PCA_PASS" rsync -e "ssh -o StrictHostKeyChecking=no" -a $MYSQL_ZIP_FILE "$PCA_USER"@"$PCA_HOST":"$PCA_DIR"/"$PERIOD"/
                    if [[ $? -eq 0 ]]; then echo -e $OK; else echo -e $KO; fi
                fi

                echo -n "$NOW [$PERIOD]  └> Cleaning"
                rm $MYSQL_ZIP_FILE
                if [ ! -f $MYSQL_ZIP_FILE ]; then echo -e $OK; else echo -e $KO; fi
            else
                echo -e $KO
            fi
            rm $MYSQL_DB_FILE
        else
            echo -e $KO
        fi
    done;
fi
